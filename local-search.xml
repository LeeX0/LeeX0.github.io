<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Linux基础知识复习(1)--基本命令</title>
    <link href="/2020/06/01/Linux%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%A4%8D%E4%B9%A0-1-%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/"/>
    <url>/2020/06/01/Linux%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%A4%8D%E4%B9%A0-1-%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<p>很久没有使用Linux，基础知识也忘了不少。</p><p>找了本<a href="https://www.linuxprobe.com/docs/LinuxProbe.pdf" target="_blank" rel="noopener">参考书</a>顺带复习一下Linux的部分基础知识。</p><h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><h3 id="常用工作命令"><a href="#常用工作命令" class="headerlink" title="常用工作命令"></a>常用工作命令</h3><ul><li><p><code>echo</code>：用于在终端输出字符串或变量提取后的值</p><pre><code class="hljs bash">$ <span class="hljs-built_in">echo</span> Hello!Hello!$ <span class="hljs-built_in">echo</span> <span class="hljs-variable">$SHELL</span>/bin/bash</code></pre></li><li><p><code>reboot</code>：重启系统</p></li><li><p><code>poweroff</code>：关闭系统</p></li><li><p><code>wget</code>：下载网络文件</p><pre><code class="hljs bash">$ wget http://www.linuxprobe.com/docs/LinuxProbe.pdf</code></pre></li><li><p><code>ps</code>：查看系统中的进程状态</p><pre><code class="hljs bash">$ ps -a(all) -u(user)</code></pre></li><li><p><code>top</code>：动态地监视进程活动与系统负载等信息</p></li><li><p><code>pidof</code>：查询某个指定服务进程的 PID 值</p><pre><code class="hljs bash">$ pidof sshd23587 798</code></pre></li><li><p><code>kill</code>：终止某个指定 PID 的服务进程</p><pre><code class="hljs bash">$ <span class="hljs-built_in">kill</span> 23587</code></pre></li><li><p><code>killall</code>：终止某个指定名称的服务所对应的全部进程</p><pre><code class="hljs bash">$ killall sshd</code></pre></li></ul><h3 id="系统状态命令"><a href="#系统状态命令" class="headerlink" title="系统状态命令"></a>系统状态命令</h3><ul><li><code>ifconfig</code>：用于获取网卡配置与网络状态等信息</li><li><code>uname</code>：用于查看系统内核与系统版本等信息 -a</li><li><code>free</code>：用于显示当前系统中内存的使用量信息</li><li><code>who</code>：用于查看当前登入主机的用户终端信息(whoami)</li><li><code>history</code>：用于显示历史执行过的命令（清除 -c）</li></ul><h3 id="目录切换命令"><a href="#目录切换命令" class="headerlink" title="目录切换命令"></a>目录切换命令</h3><ul><li><code>pwd</code>：显示用户当前所处的工作目录</li><li><code>cd</code>：切换工作路径</li><li><code>ls</code>：显示目录中文件信息（所有文件-a，详细信息-l）</li></ul><h3 id="文件编辑命令"><a href="#文件编辑命令" class="headerlink" title="文件编辑命令"></a>文件编辑命令</h3><ul><li><p><code>cat</code>：查看纯文本文件（较少）</p></li><li><p><code>more</code>：查看纯文本文件（较多）</p></li><li><p><code>head</code>：查看纯文本文档的前 n行</p><pre><code class="hljs bash">$ head -n 20 /etc/passwd</code></pre></li><li><p><code>tail</code>：查看纯文本文档的后 N 行或持续刷新内容</p><pre><code class="hljs bash">$ tail -n 20 /etc/passwd$ tail -f /var/<span class="hljs-built_in">log</span>/message</code></pre></li><li><p><code>tr</code>：替换文本文件中的字符</p><pre><code class="hljs bash">$ cat anaconda-ks.cfg | tr [a-z] [A-Z]</code></pre></li><li><p><code>wc</code>：统计指定文本的行数-l、字数-w、字节数-c</p><pre><code class="hljs bash">$ wc -l /etc/passwd</code></pre></li><li><p><code>stat</code>：查看文件的具体存储信息和时间等信息</p><pre><code class="hljs bash">$ <span class="hljs-built_in">stat</span> /etc/passwd</code></pre></li><li><p><code>diff</code>：比较多个文本文件的差异</p><pre><code class="hljs bash">$ diff diff_a.txt diff_b.txt</code></pre></li></ul><h3 id="目录管理命令"><a href="#目录管理命令" class="headerlink" title="目录管理命令"></a>目录管理命令</h3><ul><li><p><code>touch</code>：创建空白文件或设置文件的时间</p><pre><code class="hljs bash">$ touch touch_a.txt</code></pre></li><li><p><code>mkdir</code>：创建空白目录</p><pre><code class="hljs bash">$ mkdir ~/mkdir_a</code></pre></li><li><p><code>cp</code>：用于复制文件和目录</p><pre><code class="hljs bash">$ cp install.log x.log$ cp -r /etc ~/mkdir_a</code></pre></li><li><p><code>mv</code>：剪切文件或将文件重命名</p><pre><code class="hljs bash">$ mv x.log linux.log</code></pre></li><li><p><code>rm</code>：删除文件或目录</p><pre><code class="hljs bash">$ rm -f install.log$ rm -rf ~/mkdir_a</code></pre></li><li><p><code>dd</code>：按照指定大小和个数的数据块来复制文件或转换文件</p><pre><code class="hljs bash">$ dd <span class="hljs-keyword">if</span>=/dev/zero of=560_file count=1 bs=560M<span class="hljs-comment"># if为输入文件，of为输出文件，count为块数 bs为每个块大小</span>1+0 records <span class="hljs-keyword">in</span>1+0 records out587202560 bytes (587 MB, 560 MiB) copied, 3.49432 s, 168 MB/s</code></pre></li><li><p><code>file</code>：查看文件的类型</p><pre><code class="hljs bash">$ file 560_file560_file: data</code></pre></li></ul><h3 id="压缩搜索命令"><a href="#压缩搜索命令" class="headerlink" title="压缩搜索命令"></a>压缩搜索命令</h3><ul><li><p><code>tar</code>：对文件进行打包压缩或解压</p><pre><code class="hljs bash">$ tar -czvf etc.tar.gz /etc<span class="hljs-comment"># 压缩</span>$ tar -xzvf etc.tar.gz -C /root/etc <span class="hljs-comment"># 解压</span></code></pre></li><li><p><code>grep</code>：在文本中执行关键词搜索，并显示匹配的结果</p><pre><code class="hljs bash">$ grep /sbin/nologin /etc/passwd<span class="hljs-comment"># -n 显示行号； -v 反选信息</span></code></pre></li><li><p><code>find</code>：按照指定条件来查找文件</p><pre><code class="hljs bash">$ find /etc -name <span class="hljs-string">"host*"</span> -<span class="hljs-built_in">print</span><span class="hljs-comment"># 获取到/etc中所有以 host 开头的文件列表</span>$ find / -perm -4000 -<span class="hljs-built_in">print</span><span class="hljs-comment"># 在整个系统中搜索权限中包括 SUID 权限的所有文件</span>$ find / -user linuxprobe -<span class="hljs-built_in">exec</span> cp -a &#123;&#125; /root/findresults/ \;<span class="hljs-comment"># 在整个文件系统中找出所有归属于 linuxprobe 用户的文件并复制到/root/findresults 目录</span><span class="hljs-comment"># 命令的结尾必须是“\;”！！！</span></code></pre></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搭建Hexo个人博客</title>
    <link href="/2020/05/24/%E6%90%AD%E5%BB%BAHexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2020/05/24/%E6%90%AD%E5%BB%BAHexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<p><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a>是一个快速、简洁且高效的博客框架。</p><p>Hexo主题较多，使用也比较方便，搭建一个博客记录生活学习。</p><p>环境搭建比较简单，记录一下中间遇到的小问题和主题的设置。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>下载安装node.js（建议安装10.0版本以上）</li><li>下载安装git</li><li>下载安装hexo， <code>npm install -g hexo</code> （建议终端走代理）</li></ul><h3 id="本地搭建测试"><a href="#本地搭建测试" class="headerlink" title="本地搭建测试"></a>本地搭建测试</h3><ul><li>本地创建一个文件夹，如xxxblog</li><li>bash中切换到xxxblog目录下，输入 <code>hexo init</code></li><li>运行<code>hexo s</code>打开服务</li><li>本地localhost:4000上应该有博客的基本模板，本地搭建完成</li></ul><h3 id="关联git"><a href="#关联git" class="headerlink" title="关联git"></a>关联git</h3><ul><li>git与本地连接</li></ul><p>绑定信息：</p><pre><code class="hljs bash">$ git config --global user.name <span class="hljs-string">"你的GitHub用户名"</span>$ git config --global user.email <span class="hljs-string">"你的GitHub绑定的邮箱"</span></code></pre><p>然后生成密钥SSH key：</p><pre><code class="hljs bash">$ ssh-keygen -t rsa -C <span class="hljs-string">"你的GitHub绑定的邮箱"</span></code></pre><p>获取生成的密钥信息放入GitHub-&gt;Settings-&gt;SSH and GPG keys：</p><pre><code class="hljs bash">$ cat ~/.ssh/id_rsa.pub</code></pre><ul><li>git与博客绑定</li></ul><p>在Github上创建名字为<code>xxx,github.io</code>的项目，xxx为你的GitHub用户名，之后均用LeeX0示例。</p><p>打开xxxblog中的_config.yml，将其中的deployment选项的内容改为：</p><pre><code class="hljs xml">deploy:  type: git  repository: https://github.com/LeeX0/LeeX0.github.io.git  branch: master</code></pre><p>ps：如果之后推送时显示403错误，将其中的<code>repository: https://github.com/LeeX0/LeeX0.github.io.git</code></p><p>改为<code>repo: https://GitHub用户名:GitHub密码@github.com/LeeX0/LeeX0.github.io.git</code>尝试</p><ul><li><p>运行<code>npm install hexo-deployer-git –save</code>安装部署工具</p></li><li><p>运行推送</p><pre><code class="hljs bash">$ hexo clean<span class="hljs-comment"># clean 清除本地静态文件</span>$ hexo g<span class="hljs-comment"># generate 生成本地静态文件</span>$ hexo d<span class="hljs-comment"># deploy 推送部署文件至GitHub</span></code></pre></li><li><p>访问leex0.github.io即可查看博客</p></li></ul><h2 id="博客基本使用"><a href="#博客基本使用" class="headerlink" title="博客基本使用"></a>博客基本使用</h2><ul><li>新建文章</li></ul><pre><code class="hljs bash">$ hexo new <span class="hljs-string">"postname"</span><span class="hljs-comment"># 创建新文章</span></code></pre><p>会在source-&gt;_posts文件夹内生成一个postname.md文件，用markdown格式进行编辑。</p><p>其中front-matter字段主要有：title 文章的标题、date 创建日期 、tags 标签、categories 分类。</p><p>tags 、categories写法建议:</p><pre><code class="hljs xml">tags: - [tag1]- [tag2]categories:- [cate1]- [cate2-1,cate2-2]</code></pre><ul><li>插入图片</li></ul><p>文章插入图片source-&gt;image下，对应文件夹markdown相对路径即可/image/xxx.jpg。</p><ul><li>生成推送</li></ul><p>之后运行推送即可</p><pre><code class="hljs bash">$ hexo clean<span class="hljs-comment"># clean 清除本地静态文件</span>$ hexo g<span class="hljs-comment"># generate 生成本地静态文件</span>$ hexo d<span class="hljs-comment"># deploy 推送部署文件至GitHub</span></code></pre><h2 id="主题设置"><a href="#主题设置" class="headerlink" title="主题设置"></a>主题设置</h2><p>其中<a href="https://hexo.io/themes/" target="_blank" rel="noopener">官网展示的主题</a>已经比较多了，<a href="https://www.zhihu.com/question/24422335" target="_blank" rel="noopener">知乎的问答</a>也有比较多推荐。</p><p>我是用的<a href="https://github.com/fluid-dev/hexo-theme-fluid" target="_blank" rel="noopener">Fluid</a>主题，介绍一下这个主题的设置。</p><ul><li>下载主题</li></ul><p><a href="https://github.com/fluid-dev/hexo-theme-fluid/archive/v1.8.0.zip" target="_blank" rel="noopener">下载</a>最新主题版本，下载后解压到 themes 目录下并重命名为 fluid。</p><ul><li>修改配置</li></ul><p>修改Hexo目录下的<code>_config.yml</code>：</p><pre><code class="hljs bash">theme: fluid  <span class="hljs-comment"># 指定主题</span>Language: zh-CN  <span class="hljs-comment"># 指定语言，可不改</span></code></pre><p>之后正常生成推送即可，更多设置可参考<a href="https://github.com/fluid-dev/hexo-theme-fluid" target="_blank" rel="noopener">文档</a>。</p>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>blog</tag>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
